diff -ru source/general.c source-new/general.c
--- source/general.c	2016-08-11 08:16:56.000000000 -0700
+++ source-new/general.c	2017-08-07 19:55:47.437464359 -0700
@@ -476,6 +476,7 @@
 void
 check_dev_tty ()
 {
+#if 0
   int tty_fd;
   char *tty;

@@ -490,6 +491,7 @@
     }
   if (tty_fd >= 0)
     close (tty_fd);
+#endif
 }

 /* Return 1 if PATH1 and PATH2 are the same file.  This is kind of
diff -ru source/include/posixwait.h source-new/include/posixwait.h
--- source/include/posixwait.h	2008-08-12 07:03:03.000000000 -0700
+++ source-new/include/posixwait.h	2017-08-07 18:37:29.854754332 -0700
@@ -34,7 +34,7 @@

 /* How to get the status of a job.  For Posix, this is just an
    int, but for other systems we have to crack the union wait. */
-#if !defined (_POSIX_VERSION)
+#if 0
 typedef union wait WAIT;
 #  define WSTATUS(t)  (t.w_status)
 #else /* _POSIX_VERSION */
@@ -50,7 +50,7 @@

 /* More Posix P1003.1 definitions.  In the POSIX versions, the parameter is
    passed as an `int', in the non-POSIX version, as `union wait'. */
-#if defined (_POSIX_VERSION)
+#if 1

 #  if !defined (WSTOPSIG)
 #    define WSTOPSIG(s)       ((s) >> 8)
diff -ru source/lib/sh/getcwd.c source-new/lib/sh/getcwd.c
--- source/lib/sh/getcwd.c	2012-03-10 07:48:50.000000000 -0800
+++ source-new/lib/sh/getcwd.c	2017-08-07 19:53:52.379759811 -0700
@@ -20,7 +20,7 @@

 #include <config.h>

-#if !defined (HAVE_GETCWD)
+#if 0

 #if !defined (__GNUC__) && !defined (HAVE_ALLOCA_H) && defined (_AIX)
   #pragma alloca
diff -ru source/lib/sh/oslib.c source-new/lib/sh/oslib.c
--- source/lib/sh/oslib.c	2013-10-14 06:12:57.000000000 -0700
+++ source-new/lib/sh/oslib.c	2017-08-07 19:10:21.375838312 -0700
@@ -236,10 +236,10 @@
 #if !defined (HAVE_MKFIFO) && defined (PROCESS_SUBSTITUTION)
 int
 mkfifo (path, mode)
-     char *path;
-     int mode;
+     const char *path;
+     mode_t mode;
 {
-#if defined (S_IFIFO)
+#if 0
   return (mknod (path, (mode | S_IFIFO), 0));
 #else /* !S_IFIFO */
   return (-1);
diff -ru source/lib/sh/winsize.c source-new/lib/sh/winsize.c
--- source/lib/sh/winsize.c	2016-01-25 10:24:45.000000000 -0800
+++ source-new/lib/sh/winsize.c	2017-08-07 19:14:41.571576687 -0700
@@ -28,7 +28,6 @@
 #  include <unistd.h>
 #endif

-#include <sys/ioctl.h>

 /* Try to find the definitions of `struct winsize' and TIOGCWINSZ */

diff -ru source/sig.c source-new/sig.c
--- source/sig.c	2016-02-11 12:02:45.000000000 -0800
+++ source-new/sig.c	2017-08-07 19:56:13.637701224 -0700
@@ -684,7 +684,9 @@

 /* Perform OPERATION on NEWSET, perhaps leaving information in OLDSET. */
 sigprocmask (operation, newset, oldset)
-     int operation, *newset, *oldset;
+     int operation;
+     const sigset_t *newset;
+     sigset_t *oldset;
 {
   int old, new;

@@ -696,11 +698,11 @@
   switch (operation)
     {
     case SIG_BLOCK:
-      old = sigblock (new);
+      //old = sigblock (new);
       break;

     case SIG_SETMASK:
-      old = sigsetmask (new);
+      //old = sigsetmask (new);
       break;

     default:
diff --git a/shell.c b/shell.c
index 45b77f9..dc92988 100644
--- a/shell.c
+++ b/shell.c
@@ -1276,7 +1276,7 @@ disable_priv_mode ()
 {
   int e;

-  if (setuid (current_user.uid) < 0)
+  if (1)
     {
       e = errno;
       sys_error (_("cannot set uid to %d: effective uid %d"), current_user.uid, current_user.euid);
@@ -1285,7 +1285,7 @@ disable_priv_mode ()
	exit (e);
 #endif
     }
-  if (setgid (current_user.gid) < 0)
+  if (1)
     sys_error (_("cannot set gid to %d: effective gid %d"), current_user.gid, current_user.egid);

   current_user.euid = current_user.uid;
